<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta name="msapplication-tap-highlight" content="no" />
  <meta name="msapplication-TileColor" content="#10a51d" />
  <meta name="theme-color" content="#10a51d" />
  <meta name="Description" content="Testing Jasper reports through it's API using Node.js" />
  <title>StewShack - Testing Jasper reports using REST and Node.js</title>
  <link rel="author" href="/humans.txt" />
  <link rel="sitemap" href="/sitemap.xml" />
  <!-- Include Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous" />
  <!-- HighlightJS -->
  <link href="../gml.min.css" rel="stylesheet" />
  <!-- Bootstrap Overrides and Site CSS -->
  <link href="../site.css" rel="stylesheet" />
</head>

<body>
  <header class="d-flex justify-content-center py-3  bg-header border-bottom border-primary">
    <ul class="nav nav-pills">
      <li class="nav-item"><a href="../index.htm" class="nav-link">Home</a></li>
      <li class="nav-item"><a href="../about.htm" class="nav-link">About Me</a></li>
      <li class="nav-item"><a href="../resume.htm" class="nav-link">Resume</a></li>
      <li class="nav-item"><a href="../articles.htm" class="nav-link active" aria-current="page">Articles</a></li>
    </ul>
  </header>
  <main class="container">
    <div class="container col-xxl-8 px-4 py-5">
      <div class="row flex-lg-row-reverse align-items-center g-5 py-5">
        <div class="col-10 col-sm-8 col-lg-6 text-center">
          <a href="https://artvee.com/dl/astronomicum-caesareum-pl-034#00"><img src="../images/node/914279ilsdl.jpg"
              class="d-block mx-lg-auto img-fluid" alt="Astronomicum cæsareum pl 034 (1540)" width="700" height="1074"
              loading="lazy" />
            <br />
            <figcaption class="blockquote-footer">
              Astronomicum cæsareum pl 034 (1540)
            </figcaption>
          </a>
        </div>
        <div class="col-lg-6">
          <h1 class="display-5 fw-bold lh-1 mb-3">Testing Jasper Reports with Node</h1>
          <p class="lead">
            By: Dan Stewart<br />
            December 2, 2018<br /><br />
            <a href="https://community.jaspersoft.com/">Jasper Reports</a> is an open source reporting tool. They offer
            a REST service that
            we can use to write automated tests against.
            <br /><br />
            The goal of the tests is to ensure that the report simply runs. So, it's more of a smoke test than a test
            for the correctness of the report.
            <br /><br />
            I will be using the Git bash shell in this article.
          </p>
        </div>
      </div>
    </div>
    <h2>Setup</h2>
    <p>
      Open a Git bash shell and confirm that you have what you need to test a Jasper report.
    <p>
    <pre><code>
$ git --version
git version 2.8.2.windows.1

$ node -v
v4.6.1

$ npm -v
3.10.9
</code></pre>
    <p>
      Now we can set up the project structure.
    </p>
    <pre><code>
$ mkdir jasper-tests
$ cd jasper-tests
$ mkdir support
$ mkdir test
</code></pre>
    <p>
      The "support" directory will hold the module we need to run the tests.
      The "test" directory will hold all of our tests.
    </p>
    <p>
      Using the Node Package Manager, we will create our package.json file to manage our dependencies.
    </p>
    <pre><code>
$ npm init
</code></pre>
    <p>
      You can complete the npm init questions as you see fit. Here is my initial package.json file.
    </p>
    <p>
      package.json
    </p>
    <pre><code class="language-javascript">
{
  "name": "jasper-tests",
  "version": "1.0.0",
  "description": "Tests for Jasper Reports",
  "main": "", 
  "author": "Dan Stewart",
  "license": "MIT",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  }
}
</code></pre>
    <p>
      Now we can bring in our dependencies.
    </p>
    <pre><code>
$ npm install eslint --save-dev
$ npm install lodash mocha promise request --save
</code></pre>
    <p>
      Here is my updated package.json file.
    </p>
    <p>
      package.json
    </p>
    <pre><code class="language-javascript">
{
  "name": "jasper-tests",
  "version": "1.0.0",
  "description": "Tests for Jasper Reports",
  "main": "",
  "author": "Dan Stewart",
  "license": "MIT", 
  "devDependencies": {
    "eslint": "^3.9.1"
  },
  "dependencies": {
    "lodash": "^4.17.2",
    "mocha": "^3.1.2",
    "promise": "^7.1.1",
    "request": "^2.78.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  }
}
</code></pre>
    <p>
      The first thing we added was <a href="https://eslint.org/">eslint</a>. It is a development dependency because we
      are using it to lint our JavaScript code.
      Now that we have eslint, we can update the package.json file with a test to run it.
    </p>
    <p>
      package.json
    </p>
    <pre><code class="language-javascript">
"scripts": {
  "test": "./node_modules/.bin/eslint --color *.js */*.js"
}
</code></pre>
    <p>
      Now we can run "npm test" and the eslint utility will check our JavaScript code.
    </p>
    <h2>Jasper Report Test</h2>
    <p>
      Now that the setup is complete, we can start writing tests.
    </p>
    <p>
      Our tests rely on information that might change in the future. So we are going to create a config.js file.
    </p>
    <p>
      config.js
    </p>
    <pre><code class="language-javascript">
"use strict";

module.exports = {
  "reportRoot": "http://reports.stewshack.com:8080/jasperserver/rest_v2/reports/",
  "reporterPassword": "P@ssw0rd!",
  "reporterUsername": "user",
  "reports": [
    "Owners/AllOwnersReport",
    "Shacks/AllShacksReport"]
};
</code></pre>
    <p>
      Add a file named "report-runs.js" into the support directory.
    </p>
    <p>
      Here are the contents of the file.
    </p>
    <p>
      support/report-runs.js
    </p>
    <pre><code class="language-javascript">
"use strict";

var request = require("request");
var Promise = require("promise");
var config = require("../config");

var exports = module.exports = {};

/*
* Verifies that a report runs.
* Jasper will return an XML object error if it does not run.
*
* Params
*
* reportPath - a string representing the Jasper report path.
*
* Returns
*
* true if the report ran and the Jasper error XML if it does not.
*
* Example
*
* var reportRan = reportRuns("http://reports.stewshack.com:8080/jasperserver/rest_v2/reports/owners/AllOwners.csv");
*/
exports.reportRuns = function reportRuns(reportPath) {
  return new Promise(
    function promiseReportRuns(fulfill, reject) {
      var body = "";
      var errorCodeFound = 0;

      var currentReportRequest = request(reportPath)
        .auth(config.reporterUsername,
          config.reporterPassword,
          false);

      currentReportRequest.on("data",
        function writeChunk(chunk) {
          body += chunk;
        });

      currentReportRequest.on("error",
        function error(err) {
          reject(err);
        });

      currentReportRequest.on("end",
        function end() {
          if (body.indexOf("errorCode") > errorCodeFound) {
            fulfill(body);
          } else {
            fulfill(true);
          }
        });
      });
  };
</code></pre>
    <p>
      All of our tests will use this module to verify that the report runs without parameters.
    </p>
    <p>
      The request module will make our call to the Jasper REST service. The promise module
      will help us handle the asynchronous function that our tests will use.
    </p>
    <p>
      We create a promise that will be fulfilled when the report is run. The caller might get back
      true if it ran without error or the error message if it failed. We will set a timeout value
      so that our promise call does not run forever.
    </p>
    <p>
      Now that we have the module that will run the report, we can write a test for the report.
    </p>
    <p>
      Add a file to run all of the reports into the test folder.
    </p>
    <p>
      test/reports.js
    </p>
    <pre><code class="language-javascript">
"use strict";

var report = require("../support/report-runs");
var config = require("../config");
var lodash = require("lodash");

var assert = require("assert");

lodash.each(config.reports, function verifyReport(reportPath) {
  describe(reportPath,
    function reportForm() {
      it("should run without error", function runReport() {
        return report.reportRuns(config.reportRoot + reportPath + ".csv").then(
          function verify(result) {
            assert.strictEqual(result, true, "The " + reportPath + " returned the error: " + result);
          });
      });
    });
});
</code></pre>

    <h2>Running the Test</h2>
    <p>
      We can update the package.json file with the script to run the tests.
    </p>
    <p>
      package.json
    </p>
    <pre><code class="language-javascript">
"scripts": {
  "test": "./node_modules/.bin/eslint --color *.js */*.js",
  "start": "./node_modules/.bin/mocha test -b -t 60000 --slow 30000"
}
</code></pre>
    <p>
      I will bail out of testing if one report fails. I set a 1 minute timeout for running
      the tests and a 30 second slow warning in mocha. You can run the tests with "npm start".
    </p>
  </main>
  <div class="container">
    <footer class="d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top border-primary">
      <div class="col-md-4 d-flex align-items-center">
        <p>
          Site content available under the <a href="https://mit-license.org/">MIT license</a>.<br />
          <a href="../privacy.htm">Privacy Policy</a>
        </p>
      </div>
      <div class="col-md-4 d-flex align-items-center">
        <p>Thank you <a href="https://docs.github.com/en/pages">GitHub Pages</a>, <a
            href="https://artvee.com/">Artvee</a>,
          <a href="https://icons.getbootstrap.com/">Bootstrap Icons</a>,
          <a href="https://highlightjs.org/">Highlight.js</a>.
        </p>
      </div>
      <ul class="nav col-md-4 justify-content-end list-unstyled d-flex">
        <li class="ms-3">
          <a class="text-muted" href="../links.htm">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-link-45deg"
              viewBox="0 0 16 16">
              <path
                d="M4.715 6.542 3.343 7.914a3 3 0 1 0 4.243 4.243l1.828-1.829A3 3 0 0 0 8.586 5.5L8 6.086a1.002 1.002 0 0 0-.154.199 2 2 0 0 1 .861 3.337L6.88 11.45a2 2 0 1 1-2.83-2.83l.793-.792a4.018 4.018 0 0 1-.128-1.287z" />
              <path
                d="M6.586 4.672A3 3 0 0 0 7.414 9.5l.775-.776a2 2 0 0 1-.896-3.346L9.12 3.55a2 2 0 1 1 2.83 2.83l-.793.792c.112.42.155.855.128 1.287l1.372-1.372a3 3 0 1 0-4.243-4.243L6.586 4.672z" />
            </svg>
          </a>
        </li>
        <li class="ms-3">
          <a class="text-muted" href="https://www.linkedin.com/in/stewshack">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-linkedin"
              viewBox="0 0 16 16">
              <path
                d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z" />
            </svg>
          </a>
        </li>
        <li class="ms-3">
          <a class="text-muted" href="https://github.com/StewShack/stewshack.github.io">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-github"
              viewBox="0 0 16 16">
              <path
                d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z" />
            </svg>
          </a>
        </li>
        <li class="ms-3">
          <a class="text-muted" href="https://www.goodreads.com/user/show/92068618-dan-stewart">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-book"
              viewBox="0 0 16 16">
              <path
                d="M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z" />
            </svg>
          </a>
        </li>
      </ul>
    </footer>
  </div>
  <!-- Include Bootstrap JavaScript -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
    crossorigin="anonymous"></script>
  <!-- HighlightJS -->
  <script src="../highlight.min.js"></script>
  <script>hljs.highlightAll();</script>
</body>

</html>